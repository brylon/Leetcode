给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。

请你将两个数相加，并以相同形式返回一个表示和的链表。

你可以假设除了数字 0 之外，这两个数都不会以 0 开头。

 

示例 1：


输入：l1 = [2,4,3], l2 = [5,6,4]
输出：[7,0,8]
解释：342 + 465 = 807.
示例 2：

输入：l1 = [0], l2 = [0]
输出：[0]
示例 3：

输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
输出：[8,9,9,9,0,0,0,1]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/add-two-numbers
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

### 解题思路
一位一位数的相加，c语言的链表使用太复杂了，懒得查了，就直接上Java了
例如两个数相加，大于十的就取余，第一个节点是没用的，防止数值为空罢了

### 代码

```java
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode sum=new ListNode(0);
        ListNode cursor=sum;
        int k=0;
        while(l1!=null||l2!=null||k!=0){
            
            if(l1!=null){
                k+=l1.val;
                l1=l1.next;
            }
            if(l2!=null){
                k+=l2.val;
                l2=l2.next;
            }
            cursor.next=new ListNode(k%10);
            cursor=cursor.next;
            k/=10;
        }
        return sum.next;
    }
}
```
